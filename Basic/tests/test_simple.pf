module test_simple
   use working_sut_mod
   use funit
   implicit none

contains

   !!! Note: no test annotation !!!
   subroutine not_a_test()
      print*,'this procedure should not be called'
   end subroutine not_a_test


   @test
   subroutine test_assert_true_and_false()
      @assertTrue(1 == 1)
      @assertFalse(1 == 2)
   end subroutine test_assert_true_and_false



   @test
   subroutine test_assert_equal()
      integer, parameter :: i_expected = 24 ! 4!
      real, parameter :: x_expected = 9. ! 3**2
      
      @assertEqual(i_expected, factorial(4))
      @assertEqual(x_expected, square(3.))

   end subroutine test_assert_equal


   @test
   subroutine test_assert_equal_with_tolerance()
      real, parameter :: x_expected = 7.

      ! Absolute tolerance
      @assertEqual(x_expected, 7.0, tolerance=0.0)
      @assertEqual(x_expected, 7.1, tolerance=0.2)
      
      ! Relative tolerance
      @assertRelativelyEqual(x_expected, 8.0, tolerance=0.5)

   end subroutine test_assert_equal_with_tolerance

   

end module test_simple
